<? namespace Bitrix\Main\UpdateSystem;$GLOBALS['____1099221252']= array(base64_decode('ZnVuY3R'.'pb25fZXh'.'pc3'.'Rz'),base64_decode('ZG'.'VmaW5l'.'Z'.'A=='),base64_decode('cGhwdmV'.'yc2lvbg=='),base64_decode(''.'Y2'.'xhc3NfZXhpc3Rz'));if(!function_exists(__NAMESPACE__.'\\___672568256')){function ___672568256($_505647162){static $_153695756= false; if($_153695756 == false) $_153695756=array(''.'TElDRU'.'5TRV9LRVk=',''.'b'.'G'.'F'.'uZw'.'==','dX'.'Rm','WQ==','c3RhYm'.'xl','b'.'W'.'Fpbg'.'='.'=','c3Rh'.'Ym'.'xlX'.'3Z'.'lcnNpb25z'.'X2'.'9ubH'.'k=','WQ='.'=','Q'.'0FO'.'R'.'1pJUA='.'=','Z3pj'.'b21w'.'c'.'mVz'.'c'.'w'.'==','WQ='.'=','Tg==','U1VQRF'.'9EQ'.'l'.'M=','WEU=','WQ==','Tg==',''.'U'.'1VQ'.'R'.'F'.'9VUlM'.'=','Q0xJRU5UX1N'.'JVE'.'U=','U0VSVk'.'VSX05'.'BT'.'U'.'U=',''.'c3B'.'k','bWFpbg==',''.'Y3'.'JjX'.'2NvZGU=','',''.'ZGJ2','U1VQRF9WRVI=','VVBEQV'.'RFX1N'.'ZU'.'1RFT'.'V9'.'WRVJTSU9OX0E=','','U1'.'VQRF9TUlM=','UlU=','U1VQRF9D'.'TVA'.'=','T'.'g='.'=','U1V'.'QRF9TVFM=','UkE=','TElDRU5TRV9TSUd'.'O'.'RUQ'.'=','Q0xJR'.'U5UX1BIUFZ'.'F'.'Ug='.'=','TkdJTl'.'g'.'=','b'.'WFp'.'b'.'g==',''.'dXBkY'.'XRlX3'.'VzZV9'.'uZ2lue'.'A==','W'.'Q'.'==','U'.'01'.'E','bW'.'Fpb'.'g==','dXBkY'.'X'.'RlX3NhZmV'.'fbW'.'9k'.'Z'.'Q'.'==','T'.'g='.'=','VkVSU'.'0lPTg==','VFl'.'QR'.'U5D','Q0hI'.'Qg==','SFR'.'U'.'UF9'.'IT'.'1NU','Q1NBQ'.'g==','U0VSVkV'.'SX'.'0'.'FE'.'RFI=','U1'.'V'.'JRA='.'=','QV'.'BQTEl'.'DQVRJT04=','','Y'.'2'.'x'.'1c3Rlc'.'g==','Q0Ns'.'d'.'XN0ZXI=','PUFDVElW'.'RQ'.'==','WQ='.'=',''.'LQ==','bWFpb'.'g'.'==','Tg==','RA==','R'.'Q==','VA==','Rg==','','');return base64_decode($_153695756[$_505647162]);}}; use Bitrix\Main\Application; use Bitrix\Main\License; use Bitrix\Main\Loader; use Bitrix\Main\SystemException; use Bitrix\Main\SiteTable; class PortalInfo{ private License $_674822240; public function __construct(){ $this->_674822240= Application::getInstance()->getLicense();} public function common(): array{ global $DB; return[ ___672568256(0) => $this->_674822240->getHashLicenseKey(), ___672568256(1) => LANGUAGE_ID, ___672568256(2) => ___672568256(3), ___672568256(4) => \COption::GetOptionString(___672568256(5), ___672568256(6), ___672568256(7)), ___672568256(8) => $GLOBALS['____1099221252'][0](___672568256(9))? ___672568256(10): ___672568256(11), ___672568256(12) => $DB->type, ___672568256(13) =>(isset($DB->_683915920) && $DB->_683915920)? ___672568256(14): ___672568256(15), ___672568256(16) => $this->_674822240->getActiveUsersCount(), ___672568256(17) => $_SERVER[___672568256(18)], ___672568256(19) => \COption::GetOptionString(___672568256(20), ___672568256(21), ___672568256(22)), ___672568256(23) => $this->__945085980(), ___672568256(24) => $GLOBALS['____1099221252'][1](___672568256(25))? UPDATE_SYSTEM_VERSION_A: ___672568256(26), ___672568256(27) => $this->__420375000() ?? ___672568256(28), ___672568256(29) => ___672568256(30), ___672568256(31) => $this->__1116615162() ?? ___672568256(32), ___672568256(33) => $this->__1689901609(), ___672568256(34) => $GLOBALS['____1099221252'][2](), ___672568256(35) => \COption::GetOptionString(___672568256(36), ___672568256(37), ___672568256(38)), ___672568256(39) => \COption::GetOptionString(___672568256(40), ___672568256(41), ___672568256(42)), ___672568256(43) => SM_VERSION, ___672568256(44) => $this->getLicenseType(), ___672568256(45) => $_SERVER[___672568256(46)], ___672568256(47) => $_SERVER[___672568256(48)], ___672568256(49) => $GLOBALS[___672568256(50)]->GetServerUniqID(),];} private function __945085980(): string{ global $DB; $_315816439= $DB->GetVersion(); return $_315816439 !== false? $_315816439: ___672568256(51);} private function __420375000():?int{ if(Loader::includeModule(___672568256(52)) && $GLOBALS['____1099221252'][3](___672568256(53))){ return \CCluster::getServersCount();} return null;} private function __1116615162():?int{ return SiteTable::getCount([___672568256(54) => ___672568256(55)]);} private function __1689901609(): string{ $_484449898= \CUpdateClient::getNewLicenseSignedKey(); return $_484449898.___672568256(56).\COption::GetOptionString(___672568256(57), $_484449898, ___672568256(58));} public function getLicenseType(): string{ if($this->_674822240->isDemo()){ return ___672568256(59);} elseif($this->_674822240->isEncoded()){ return ___672568256(60);} elseif($this->_674822240->isTimeBound()){ return ___672568256(61);} else{ return ___672568256(62);}} public function getModules(): array{ $_815543328= ___672568256(63); $_1607063095= \CUpdateClient::GetCurrentModules($_815543328); if(!empty($_815543328)){ throw new SystemException($_815543328);} return $_1607063095;} public function getLanguages(): array{ $_815543328= ___672568256(64); $_1293474992= \CUpdateClient::GetCurrentLanguages($_815543328); if(!empty($_815543328)){ throw new SystemException($_815543328);} return $_1293474992;}}?>